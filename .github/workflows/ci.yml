name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  # --- Job 1: Build and Push our Docker Images ---
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push product-service image
        uses: docker/build-push-action@v5
        with:
          context: ./microservices/product_service
          push: true
          tags: gibsonr7/product-service:latest

      # We've added a step for the details-service to make our CI complete
      - name: Build and push details-service image
        uses: docker/build-push-action@v5
        with:
          context: ./microservices/details_service
          push: true
          tags: gibsonr7/details-service:latest

  # --- Job 2: Our new Continuous Deployment job ---
  deploy:
    # This job will only start after the 'build-and-push' job has finished successfully
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Azure VM
        # This is a popular community action for running commands over SSH
        uses: appleboy/ssh-action@master
        with:
          # We securely pull the server details from our GitHub Secrets
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # This is the script that will be executed on our remote Azure server
          script: |
            # Navigate into the project directory we cloned earlier
            cd ./api-architecture-project
            
            # Pull the latest versions of our images from Docker Hub
            docker-compose pull
            
            # Restart the application with the new images
            # Docker Compose is smart and will only restart containers whose images have changed
            docker-compose up -d
            
            echo "Deployment to Azure was successful!"