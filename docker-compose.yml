# Specify the Docker Compose file format version.
version: '3.8'

# Define all the services (containers) that make up our application.
services:
  # 1. The Database Service
  database:
    image: postgres:13
    container_name: compose-db
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kongpass
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong", "-d", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # 2. The Kong Gateway Service
  kong:
    image: kong:latest
    container_name: compose-kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=database
      - KONG_PG_PASSWORD=kongpass
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
    networks:
      - app-network
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      database:
        condition: service_healthy
      kong-migrations:
        condition: service_completed_successfully

  # 3. The Kong Migration Job
  kong-migrations:
    image: kong:latest
    command: "kong migrations bootstrap"
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=database
      - KONG_PG_PASSWORD=kongpass
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    restart: on-failure

  # 4. Our Product Listing Service
  product_service:
    build:
      context: ./microservices/product_service # The directory containing the Dockerfile
      dockerfile: Dockerfile
    container_name: compose-product-service
    networks:
      - app-network
    # We don't need 'ports' because only Kong talks to it.

  # 5. Our Product Details Service
  details_service:
    build:
      context: ./microservices/details_service
      dockerfile: Dockerfile # We can reuse the same Dockerfile for now
    # We need to tell it to run the *other* script
    container_name: compose-details-service
    networks:
      - app-network

# Define the network(s) our services will use.
networks:
  app-network:
    driver: bridge

# Define the volumes   
volumes:
  postgres-data:
    driver: local